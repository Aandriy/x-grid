!function(t){var e={};function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(r,o,function(e){return t[e]}.bind(null,o));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){i(2),t.exports=i(1)},function(t,e){},function(t,e,i){"use strict";i.r(e);var r=function(){function t(){this.model={rows:10,totalRows:0,page:1,totalPages:0,newPage:1,data:[],sortBy:[],filterToolbar:!0},this.subscribers={}}return Object.defineProperty(t.prototype,"data",{get:function(){return this.model.data},set:function(t){$.isArray(t)&&(this.model.data=t,this.notify("data",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sortBy",{get:function(){return this.model.sortBy},set:function(t){$.isArray(t)&&(this.model.sortBy=t,this.notify("sortBy",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"totalRows",{get:function(){return this.model.totalRows},set:function(t){"number"==typeof t&&t>-1&&(this.model.totalRows=t,this.notify("totalRows",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"totalPages",{get:function(){return this.model.totalPages},set:function(t){"number"==typeof t&&t>-1&&(this.model.totalPages=t,this.notify("totalPages",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rows",{get:function(){return this.model.rows},set:function(t){"number"==typeof t&&t>-1&&(this.model.rows=t,this.notify("rows",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"page",{get:function(){return this.model.page},set:function(t){"number"==typeof t&&t>-1&&(this.model.page=t,this.notify("page",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"newPage",{get:function(){return this.model.newPage},set:function(t){"number"==typeof t&&t>-1&&(this.model.newPage=t,this.notify("newPage",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filterToolbar",{get:function(){return this.model.filterToolbar},set:function(t){this.model.filterToolbar=t,this.notify("filterToolbar",this)},enumerable:!0,configurable:!0}),t.prototype.on=function(t,e){this._getStorage(t).push(e)},t.prototype.notify=function(t,e){var i=this._getStorage(t);$.each(i,function(i,r){var o=[e,t,i].slice(0);r.apply(r,o)})},t.prototype._getStorage=function(t){var e=this.subscribers;return e[t]||(e[t]=[]),e[t]},t}(),o=new(function(){function t(){this.isNotZero={undefined:1,"":1,null:1,false:1,true:1},this.integer=this.integer.bind(this),this.int=this.integer,this.numeric=this.numeric.bind(this),this.float=this.numeric,this.number=this.numeric,this.string=this.string.bind(this)}return t.prototype.float=function(t){return t},t.prototype.int=function(t){return t},t.prototype.number=function(t){return t},t.prototype.getByType=function(t){switch(t){case"int":case"integer":return this.integer;case"float":case"number":case"numeric":return this.numeric;case"boolean":return this.boolean;default:return this.string}},t.prototype.string=function(t,e,i){return i.insensitive?this.insensitivetext.call(this,t):this.sensitivetext.call(this,t)},t.prototype.boolean=function(t){return!!t},t.prototype.numeric=function(t){var e;return this.isNotZero[t]?e=Number.NEGATIVE_INFINITY:isNaN(t)?(e=parseFloat(String(t).replace(/,/g,".").replace(/[\$%]/g,"")),e=isNaN(e)?Number.NEGATIVE_INFINITY:e):e=+t,e},t.prototype.integer=function(t){var e;return this.isNotZero[t]?e=Number.NEGATIVE_INFINITY:(isNaN(t)||(e=String(t).replace(/[\$,%]/g,"")),e=parseInt(e),e=isNaN(e)?Number.NEGATIVE_INFINITY:e),e},t.prototype.insensitivetext=function(t){return(t?$.trim(String(t)):"").toLowerCase()},t.prototype.sensitivetext=function(t){return t?$.trim(String(t)):""},t}()),n=function(){return function(t){var e=this;this.formControlType="text",this.selectOptions=[],this.placeholder="",this.onEnter=!0,this.onKeydown=!1,this.onChange=!1,this.allowResetButton=!0,this.allowSubmitButton=!0,$.extend(this,t),this.transformData||"select"===this.formControlType&&(this.transformData=function(t){var i,r=e.selectOptions;if($.isArray(t)){if(i=[],t.forEach(function(t){var e=r[t];e?i.push(e.value):i.push(t)}),!i.length)return null}else if(r[t])return r[t].value;return i})}}(),a=new(function(){function t(){}return t.prototype.booleanYesNo=function(t,e,i,r){return e?"Yes":"No"},t.prototype.text=function(t,e,i,r){null==e&&(e="");var o=$('<div class="ellipsis"></div>');t.html(o),o.text(e)},t.prototype.html=function(t,e,i,r){return null==e&&(e=""),e},t}()),s=function(){function t(t,e){this.filterOption="cn",this.filterType="string",this.filterable=!1,this.fixed=!1,this.hidden=!1,this.insensitive=!1,this.label="",this.resizable=!1,this.sortType="string",this.sortable=!1,this.dependent=[],this.order=e,$.extend(this,t),this.filterToolbarSettings=new n(t.filterToolbarSettings),void 0===this.alias&&(this.alias=this.key),void 0===this.key&&(this.key=this.alias),t.sortType&&"function"==typeof t.sortType?this.sortFormatter=t.sortType:this.sortFormatter=o.getByType(t.sortType),t.filterType&&"function"==typeof t.filterType?this.filterFormatter=t.filterType:this.filterFormatter=o.getByType(t.filterType),"string"==typeof t.cellFormatter&&"function"==typeof a[t.cellFormatter]?this.cellFormatter=a[t.cellFormatter]:"function"==typeof t.cellFormatter?this.cellFormatter=t.cellFormatter:this.cellFormatter=a.text,this.dependent=[],this._check=function(){this.hidden?this.dependent.forEach(function(t){t.$item.detach()}):this.dependent.forEach(function(t){t.$anchor.after(t.$item)})}}return t.prototype.labelFormatter=function(){return this.label},t.prototype.filterToolbarFormatter=function(t,e){var i,r,o=e.filterToolbarSettings||{},n=$('<div class="Xgrid-filter-control-wrap"></div>'),a='<div class="Xgrid-filter-wrapper">';switch((o.allowResetButton||o.allowSubmitButton)&&(a+='<span class="Xgrid-filter-btns">',o.allowResetButton&&(a+='<span class="Xgrid-btn Xgrid-reset">&#10006;</span>'),o.allowSubmitButton&&(a+='<span class="Xgrid-btn Xgrid-onSubmit">&#10004;</span>'),a+="</span>"),a+="</div>",o.formControlType){case"select":i=$('<select class="Xgrid-select Xgrid-filter"  />'),o.selectOptions.forEach(function(t,e){i.append('<option value="'+e+'">'+t.label+"</option>")}),i.val([]).each(function(){this.selectedIndex=-1});break;default:i=$('<input type="text" class="Xgrid-input Xgrid-filter" />')}o.onChange&&i.addClass("Xgrid-onChange"),o.onKeydown&&i.addClass("Xgrid-onKeydown"),o.onEnter&&i.addClass("Xgrid-onEnter"),o.attr&&i.attr(o.attr),r=$(a),n.append(i),r.append(n),t.html(r)},t}(),l=function(){function t(t,e){void 0===e&&(e="ASC"),this.by=t,this.order=e}return t.prototype.triggerOrder=function(){"ASC"===this.order?this.order="DESC":this.order="ASC"},t}(),d=function(){function t(t,e,i){this.options=$.extend({colModels:[],filterToolbar:!1},t),this.properties={scrollbarWidth:null},this.viewModel=i,this.storage=e,this._exec()}return t.prototype._getScrollbarWidth=function(){var t,e;return this.properties.scrollbarWidth?this.properties.scrollbarWidth:((t=document.createElement("div")).innerHTML='<div style="width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;"><div style="width:1px;height:100px;"></div></div>',t=t.firstChild,document.body.appendChild(t),e=t.offsetWidth-t.clientWidth,document.body.removeChild(t),this.properties.scrollbarWidth=e,e)},t.prototype._columnModel=function(){var t=this.storage,e=this.options,i=[],r={},o={};$.each(e.colModels,function(t,e){var n=new s(e,t);if(r[n.alias])throw{value:{i:t,data:JSON.stringify(e)},message:"alias is not unique",name:"Error: colModel"};r[n.alias]=1,o[n.alias]=n,i.push(n)}),t.colModels=i,t.colModelsDictionary=o},t.prototype._exec=function(){var t=this.storage;this._columnModel(),t.scrollbarWidth=this._getScrollbarWidth(),this._processSorting()},t.prototype._processSorting=function(){var t=this.viewModel,e=this.options,i=e.sortBy,r=[];if(e.filterToolbar&&(t.filterToolbar=!0),e.rows&&(t.rows=e.rows),i&&"string"==typeof i){var o=i.replace(/\s+/g," ").trim().split(",");o.length&&o.forEach(function(t,e){var i=t.trim().split(" "),o=i[0];if(void 0!==o){var n=void 0;n="DESC"===String(i[1]).toUpperCase()?new l(o,"DESC"):new l(o),r.push(n)}})}else $.isArray(i)&&i.length&&i.forEach(function(t){var e,i=t.by,o=t.order;i&&(e="DESC"!==String(o).toUpperCase()?new l(i):new l(i,"DESC"),r.push(e))});r.length&&(t.sortBy=r)},t}(),h=new(function(){function t(){this.now=Date.now||function(){return(new Date).getTime()}}return t.prototype.execute=function(t,e,i){var r=function(t){"function"==typeof t&&t.apply(i||t,e)};$.isArray(t)?t.forEach(r):r(t)},t.prototype.insertElement=function(t,e,i){var r=$(i);r.length||(i=String(i)),t.find(":not(iframe)").addBack().contents().filter(function(){return 3===this.nodeType}).each(function(){if(-1!==this.data.indexOf(e))if(r.length){$(this).after(r);var t=this.data,o=t.substr(0,t.indexOf(e)),n=t.substr(o.length+e.length,t.length);o.length||$(this).remove(),n.length?(o.length&&(this.data=o),r.after(n)):o.length&&(this.data=o)}else this.data=this.data.replace(e,i)})},t.prototype.throttle=function(t,e){void 0===e&&(e=10);var i,r,o=null;return function(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];r=n,(i=this)?i===window&&(i=t):i=t,o||(o=setTimeout(function(){clearTimeout(o),o=null,t.apply(i,r)},e))}},t}()),u=function(){function t(t,e,i){this.viewModel=i,this.options=$.extend({theadClass:"table-grid-thead",tbodyClass:"table-grid-tbody",firstBtnTemplate:'<span class="btn btn-outline-secondary">&#171;</span>',lastBtnTemplate:'<span class="btn btn-outline-secondary">&#187;</span>',prevBtnTemplate:'<span class="btn btn-outline-secondary">&#8249;</span>',nextBtnTemplate:'<span class="btn btn-outline-secondary">&#8250;</span>',currentPageTemplate:'<input type="text" class="form-control" />',paginationTemplate:'<div class="Xgrid-paggination input-group input-group-sm">\n\t\t\t<div class="input-group-prepend" >{firstBtnTemplate}{prevBtnTemplate}<span class="input-group-text"> Page </span></div>\n\t\t\t\t{currentPageTemplate}\n\t\t\t\t<div class="input-group-prepend" ><span class="input-group-text"> of <span class="Xgrid-total-pages"></span></span>{nextBtnTemplate}{lastBtnTemplate}</div>\n\t\t\t</div>'},t),this.storage=e,this._exec()}return t.prototype.buildFilterToolbar=function(){this.viewModel.filterToolbar&&this._buildFilterToolbar()},t.prototype._exec=function(){this._build(),this._buildThead(),this._buildTBody(),this._buildPagination();var t=this.storage,e=t.colModels,i=t.$gridTable.find(".Xgrid-tbody-w td"),r=t.$headTable.find("tr");e.forEach(function(t,e){var o=[];o.push(i.get(e)),r.each(function(){o.push($(this).find(">*:eq("+e+")").get(0))}),t.dependent=o.map(function(t){var e={$anchor:$(document.createTextNode("")),$item:$(t)};return e.$item.before(e.$anchor),e})})},t.prototype._addPropstoHeaderCells=function(t,e){var i=$(e),r=this.storage.colModels[t];i.attr("data-alias",r.alias),r.fixed&&(i.addClass("fixed"),r.width&&i.width(r.width))},t.prototype._buildFilterToolbar=function(){var t=this.storage,e=$('<tfoot class="Xgrid-thead-filter"><tr>'+new Array(t.colModels.length+1).join('<td class="Xgrid-filter-cell"></td>')+"</tr></tfoot>"),i=this._addPropstoHeaderCells.bind(this);t.$filterToolbarItems=e.find(".Xgrid-filter-cell").each(i),t.$headTable.find(".Xgrid-thead-w td").each(i),t.$headTable.append(e)},t.prototype._buildThead=function(){var t=this,e=this.storage,i="thead",r="<"+i+' class="Xgrid-thead-w"><tr>'+new Array(e.colModels.length+1).join('<td><div class="Xgrid-WidthListener-wrapper"><iframe data-col="0" class="Xgrid-WidthListener"></iframe></div></td>')+"</tr></"+i+">";e.$headTable.html(r),e.$headTable.find(".Xgrid-thead-w td").each(function(t){var i=$(this),r=e.colModels[t];i.find("iframe")[0].setAttribute("data-alias",r.alias)}),i="tbody",e.$headTable.append("<"+i+' class="Xgrid-thead-labels"><tr>'+new Array(e.colModels.length+1).join('<th class="Xgrid-thead-label"></th>')+"</tr></"+i+">"),e.$headLabels=e.$headTable.find(".Xgrid-thead-label"),e.$headLabels.each(function(e,i){t._addPropstoHeaderCells(e,i)}),this.buildFilterToolbar()},t.prototype._buildTBody=function(){var t=this,e=this.storage,i='<thead class="Xgrid-tbody-w"><tr>'+new Array(e.colModels.length+1).join("<td><i></i></td>")+"</tr></thead>";e.$gridTable.html(i),e.$gridTable.find(".Xgrid-tbody-w tr td").each(function(e,i){t._addPropstoHeaderCells(e,i)})},t.prototype._buildPagination=function(){var t,e=this.storage,i=this.options,r=$(i.paginationTemplate),o=i.firstBtnTemplate,n=i.lastBtnTemplate,a=i.prevBtnTemplate,s=i.nextBtnTemplate,l=i.currentPageTemplate;h.insertElement(r,"{firstBtnTemplate}",o?$(o).addClass("Xgrid-first"):""),h.insertElement(r,"{prevBtnTemplate}",$(a).addClass("Xgrid-prev")),h.insertElement(r,"{nextBtnTemplate}",$(s).addClass("Xgrid-next")),h.insertElement(r,"{lastBtnTemplate}",$(n).addClass("Xgrid-last")),h.insertElement(r,"{currentPageTemplate}",$(l).addClass("Xgrid-current-page")),(t=i.paginationSelector?$(i.paginationSelector):e.$box.find(".Xgrid-paggination-wrapper")).html(r),e.$paginationBox=t},t.prototype._build=function(){var t=this.storage,e=this.options;t.$box.html('<div class="Xgrid">\n\t<div class="Xgrid-wrapper">\n\t\t<div class="Xgrid-wrapper-holder">\n\t\t\t<div class="Xgrid-thead-wrapper">\n\t\t\t\t<table class="Xgrid-thead '+e.theadClass+'"></table>\n\t\t\t</div>\n\t\t\t<div class="Xgrid-tbody-wrapper">\n\t\t\t\t<table class="Xgrid-tbody '+e.tbodyClass+'"></table>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="Xgrid-paggination-wrapper"></div>\n\t</div>\n</div>'),t.$headTable=t.$box.find(".Xgrid-thead"),t.$gridTable=t.$box.find(".Xgrid-tbody")},t}(),c=function(){return function(t,e,i){this.data=t,this.field=e,this.op=i}}(),p=function(){function t(t,e,i){this.timeoutOnKeydown=null,this.storage=t,this.viewModel=e,this.options=i,this._bind()}return t.prototype.triggerToolbar=function(){var t=this.storage,e=this.options,i=t.colModels,r=[],o="AND"===e.filterToolbarGroupOp?"AND":"OR",n=null;if(!t.$filterToolbarItems)return this;t.$filterToolbarItems.each(function(t){var e=$(this).find(".Xgrid-filter");if(e.length){var o=i[t],n=o.filterToolbarSettings,a=o.filterOption||"cn",s=o.filterAlias||o.alias||o.key,l=e.val();"function"==typeof n.transformData&&(l=n.transformData(l,n)),l&&o.insensitive&&(l=String(l).toLowerCase()),(void 0!==l&&""!==l&&null!==l||"nu"===a||"nn"===a)&&r.push(new c(l,s,a))}}),r.length&&(n={groupOp:o,rules:r}),t.filter=n},t.prototype._bind=function(){var t=this.storage;t.$headTable.on("keypress","input.Xgrid-input.Xgrid-onEnter",this._handlerFilterOnEnter.bind(this)),t.$headTable.on("keydown","input.Xgrid-input.Xgrid-onKeydown",this._handlerFilterOnKeydown.bind(this)),t.$headTable.on("change",".Xgrid-filter.Xgrid-onChange",this._handlerFilterOnChange.bind(this)),t.$headTable.on("click",".Xgrid-reset",this._handlerFilterOnReset.bind(this)),t.$headTable.on("click",".Xgrid-onSubmit",this._handlerFilterOnSubmit.bind(this))},t.prototype._handlerFilterOnSubmit=function(t){$(t.currentTarget).blur(),this.triggerToolbar()},t.prototype._handlerFilterOnReset=function(t){var e=this.storage,i=$(t.currentTarget).blur().parents(".Xgrid-filter-cell:eq(0)"),r=i.attr("data-alias"),o=i.find(".Xgrid-filter"),n=e.colModelsDictionary[r];n&&("select"===n.filterToolbarSettings.formControlType?o.val([]).each(function(t,e){e.selectedIndex=-1}):o.val(""),this.triggerToolbar())},t.prototype._handlerFilterOnChange=function(){this.triggerToolbar()},t.prototype._handlerFilterOnKeydown=function(t){var e=this;switch(t.which){case 13:return!1;case 9:case 16:case 37:case 38:case 39:case 40:case 27:break;default:this.timeoutOnKeydown&&clearTimeout(this.timeoutOnKeydown),this.timeoutOnKeydown=setTimeout(function(){e.triggerToolbar()},500)}},t.prototype._handlerFilterOnEnter=function(t){13===(t.charCode||t.keyCode||0)&&(t.preventDefault(),this.triggerToolbar())},t}(),f=function(){function t(t,e,i){this.storage=t,this.viewModel=e,this.options=i,this.bind()}return t.prototype.sortByAlias=function(t){var e,i=this.storage,r=this.viewModel;if(i.colModelsDictionary[t]){for(var o=(e=r.sortBy).length,n=void 0;o--;)if(e[o].by===t){n=e.splice(o,1)[0];break}n?n.triggerOrder():n=new l(t),this.options.multiSorting?e.unshift(n):e=[n],r.sortBy=e}},t.prototype.bind=function(){var t=this.storage.$headTable;this._off(),t.on("click.Xgrid",".Xgrid-thead-label.sortable",this._handlerSortColumn.bind(this))},t.prototype._off=function(){this.storage.$headTable.off(".Xgrid")},t.prototype._handlerSortColumn=function(t){t.preventDefault();var e=$(t.currentTarget),i=e.attr("data-alias"),r=this.storage.colModelsDictionary[i];e.blur(),r&&r.sortable&&this.sortByAlias(i)},t}(),g=function(){return function(t){this.filter=[],this.sort=[],this.rows=0,this.page=1,$.extend(this,t)}}(),y=new(function(){function t(){}return t.prototype.exec=function(t,e){var i,r=this;return void 0===t&&(t=[]),void 0===e&&(e=[]),t.length&&e.length?((i=this._getSource(t,e)).sort(function(t,i){var o=0,n=0;for(e.length;n<e.length;n++){var a=e[n].by;if(0!==(o="ASC"===e[n].order?r.ASC(t.formatted[a],i.formatted[a]):r.DESC(t.formatted[a],i.formatted[a])))return o}return o}),i.map(function(t){return t._})):t},t.prototype.ASC=function(t,e){return t<e?-1:t>e?1:0},t.prototype.DESC=function(t,e){return t<e?1:t>e?-1:0},t.prototype._getSource=function(t,e){return t.map(function(i){var r={};return e.forEach(function(e){r[e.by]=e.get(i[e.by],i,e.colModel,t)}),{_:i,formatted:r}})},t}()),b=new(function(){function t(){var t=this;this.eq=this.equals,this.ne=this.notEquals,this.lt=this.less,this.le=this.lessOrEquals,this.gt=this.greater,this.ge=this.greaterOrEquals,this.cn=this.contains,this.nc=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];return!t.contains.apply(t,e)},this.bw=this.startsWith,this.bn=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];return!t.startsWith.apply(t,e)},this.en=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];return!t.endsWith.apply(t,e)},this.ew=this.endsWith,this.in=this.inArray,this.ni=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];return!t.inArray.apply(t,e)},this.nu=this.isNull,this.nn=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];return!t.isNull.apply(t,e)}}return t.prototype.equals=function(t,e){return t===e},t.prototype.notEquals=function(t,e){return t!==e},t.prototype.isNull=function(t){return null===t},t.prototype.greater=function(t,e){return t>e},t.prototype.less=function(t,e){return t<e},t.prototype.greaterOrEquals=function(t,e){return t>=e},t.prototype.lessOrEquals=function(t,e){return t<=e},t.prototype.inArray=function(t,e){return-1!==$.inArray(e,t)},t.prototype.startsWith=function(t,e,i){t=String(t),e=String(e),i&&(t=t.toUpperCase(),e=e.toUpperCase());var r=t.length;return t.substr(0,r)===e},t.prototype.endsWith=function(t,e,i){t=String(t),e=String(e),i&&(t=t.toUpperCase(),e=e.toUpperCase());var r=-1*e.length;return t.substr(r)===e},t.prototype.contains=function(t,e,i){return t=String(t),e=String(e),i&&(t=t.toUpperCase(),e=e.toUpperCase()),-1!==e.indexOf(t)},t}()),v=new(function(){function t(){}return t.prototype.exec=function(t,e,i){var r=this;return t.filter(function(t,o){var n=i();return r._check(e,t,n)})},t.prototype._or=function(t,e,i){for(var r=t.length;r--;){var o=t[r];if(!b[o.op])return!0;var n=i(o.field,e);if(b[o.op](o.data,n))return!0}return!1},t.prototype._and=function(t,e,i){for(var r=t.length;r--;){var o=t[r];if(!b[o.op])return!0;var n=i(o.field,e);if(!b[o.op](o.data,n))return!1}return!0},t.prototype._check=function(t,e,i){var r=t.rules.length&&"OR"===String(t.groupOp).toUpperCase();return!$.isArray(t.rules)||!t.rules.length||(r?this._or(t.rules,e,i):this._and(t.rules,e,i))},t}()),m=function(){return function(t,e,i,r){void 0===t&&(t=[]),void 0===e&&(e=1),void 0===i&&(i=0),void 0===r&&(r=0),this.page=1,this.totalPages=0,this.totalRows=0,this.data=t,e>0&&(this.page=e),this.totalPages=i,this.totalRows=r}}(),w=function(){return function(t,e,i){this.get=o.getByType(),this.order=t,this.by=e,i&&(this.colModel=i,this.get=i.sortFormatter)}}(),T=function(){function t(t){var e=this;this.viewModel=t.viewModel,this.storage=t.storage,this.ajax=t.ajax,t.isLocal?this.process=this._localProcess.bind(this):this.process=this._serverProcess.bind(this),setTimeout(function(){e._subscribe()},50)}return t.prototype.exec=function(){var t=this,e=this.storage,i=this.viewModel,r=new g({filter:e.filter,sort:i.sortBy,rows:i.rows,page:i.newPage});e.query=r,e.$box.addClass("Xgrid-loading"),setTimeout(function(){t.process().done(function(e){t._filler(e),t.storage.$box.removeClass("Xgrid-loading")})},0)},t.prototype._filler=function(t){var e=this.viewModel;e.totalPages=t.totalPages,e.totalRows=t.totalRows,e.data=t.data,e.page=t.page},t.prototype._localFilter=function(t,e){var i=$.Deferred(),r=this.storage;return setTimeout(function(){var o;e&&(t=v.exec(t,e,(o=r.colModelsDictionary,function(){var t={};return function(e,i){if(void 0===t[e]){var r=o[e];t[e]=r.filterFormatter(i[r.key],i,r)}return t[e]}}))),i.resolve(t)},0),i},t.prototype._localSort=function(t,e){var i=$.Deferred(),r=this.storage;if(e.length){var o=e.map(function(t){var e=r.colModelsDictionary[t.by],i=e?e.key:t.by;return new w(t.order,i,e)});t=y.exec(t,o),setTimeout(function(){i.resolve(t)},0)}else i.resolve(t);return i},t.prototype._getLocalData=function(t,e){var i=this.viewModel,r=(e.page-1)*i.rows,o=e.page*i.rows,n=t.slice(r,o);return new m(n,e.page,Math.ceil(t.length/i.rows)||1,t.length)},t.prototype._localProcess=function(){var t=this,e=$.Deferred(),i=this.storage,r=i.query;return this._localFilter(i.data,r.filter).done(function(i){t._localSort(i,r.sort).done(function(i){e.resolve(t._getLocalData(i,r))})}),e},t.prototype._serverProcess=function(){var t=this.storage.query,e=$.Deferred();return this.ajax(JSON.parse(JSON.stringify(t))).always(function(t){var i=new m;$.extend(i,t),e.resolve(i)}),e},t.prototype._subscribe=function(){var t=this,e=this.viewModel,i=this.storage,r=h.throttle(function(){t.exec()},100),o=function(t,i){switch(i){case"filter":case"sortBy":e.newPage=1}r()};e.on("newPage",o),e.on("sortBy",o),i.on("filter",o)},t}(),_=function(){function t(t){this.properties={$cellWidthRecipients:null,$cellWidthListeners:null},this.storage=t,this._exec()}return t.prototype.resize=function(){var t=this;this.storage.$headTable.find(".Xgrid-thead-w iframe").each(function(e,i){var r=$(i),o=r.width(),n=r.attr("data-alias");t._handlerResizedCellWidth(o,n)})},t.prototype._exec=function(){this._build(),this._bind()},t.prototype._build=function(){var t=this.storage,e=this.properties,i=[];e.$cellWidthRecipients=t.$gridTable.find(".Xgrid-tbody-w i"),t.$headTable.find(".Xgrid-thead-w td").each(function(t){var e=$(this).find("iframe")[0];e.setAttribute("data-col",String(t)),i.push(e)}),e.$cellWidthListeners=$(i)},t.prototype._bind=function(){var t=this;this.properties.$cellWidthListeners.each(function(e,i){var r=$(i);t._handlerResizedCellWidth(r.width(),r.attr("data-alias")),setTimeout(function(){$(i.contentWindow).on("resize",function(){t._handlerResizedCellWidth(r.width(),r.attr("data-alias"))})},100)})},t.prototype._handlerResizedCellWidth=function(t,e){var i=this.properties.$cellWidthRecipients.filter('[data-alias="'+e+'"]');i.width(t),i.parent().width(t)},t}(),x=function(){function t(t){this._subscribers={},this._model=$.extend({$box:null,$headTable:null,$gridTable:null,$headLabels:null,$paginationBox:null,$filterToolbarItems:null,query:null,scrollbarWidth:0,colModels:[],colModelsDictionary:{},filter:null,data:[],processedData:[]},t)}return Object.defineProperty(t.prototype,"$box",{get:function(){return this._model.$box},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"$headTable",{get:function(){return this._model.$headTable},set:function(t){t instanceof $&&(this._model.$headTable=t,this.notify("$headTable",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"$gridTable",{get:function(){return this._model.$gridTable},set:function(t){t instanceof $&&(this._model.$gridTable=t,this.notify("$gridTable",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"$headLabels",{get:function(){return this._model.$headLabels},set:function(t){t instanceof $&&(this._model.$headLabels=t,this.notify("$headLabels",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"$paginationBox",{get:function(){return this._model.$paginationBox},set:function(t){t instanceof $&&(this._model.$paginationBox=t,this.notify("$paginationBox",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"$filterToolbarItems",{get:function(){return this._model.$filterToolbarItems},set:function(t){t instanceof $&&(this._model.$filterToolbarItems=t,this.notify("$filterToolbarItems",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"scrollbarWidth",{get:function(){return this._model.scrollbarWidth},set:function(t){"number"==typeof t&&t>0&&(this._model.scrollbarWidth=t,this.notify("scrollbarWidth",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"colModels",{get:function(){return this._model.colModels},set:function(t){$.isArray(t)&&(this._model.colModels=t,this.notify("colModels",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"colModelsDictionary",{get:function(){return this._model.colModelsDictionary},set:function(t){this._model.colModelsDictionary=t,this.notify("colModelsDictionary",this)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filter",{get:function(){return this._model.filter},set:function(t){null!==t&&"object"!=typeof t||(this._model.filter=t,this.notify("filter",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"data",{get:function(){return this._model.data},set:function(t){$.isArray(t)&&(this._model.data=t,this.notify("data",this))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"query",{get:function(){return this._model.query},set:function(t){this._model.query=t,this.notify("query",this)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"processedData",{get:function(){return this._model.processedData},set:function(t){this._model.processedData=t,this.notify("processedData",this)},enumerable:!0,configurable:!0}),t.prototype.on=function(t,e){this._getStorage(t).push(e)},t.prototype.notify=function(t,e){var i=this._getStorage(t);$.each(i,function(i,r){var o=[e,t,i].slice(0);r.apply(r,o)})},t.prototype._getStorage=function(t){var e=this._subscribers;return e[t]||(e[t]=[]),e[t]},t}(),M=function(){function t(t,e){this.viewModel=e,this.storage=t}return t.prototype.thead=function(){var t=this.storage,e=["resizable","sortable","filterable","hidden"],i=t.colModels;t.$headLabels.each(function(t,r){var o=$(r),n=$(document.createElement("div")),a=i[t];o.data("Xgrid.data",a);var s=a.labelFormatter(n,o,a,t);void 0!==s&&n.html(s),r.innerHTML="",o.append(n),$.each(e,function(t,e){a[e]?o.addClass(e):o.removeClass(e)})}),this.filterToolbar()},t.prototype.filterToolbar=function(){var t=this.storage,e=t.colModels;t.$filterToolbarItems&&t.$filterToolbarItems.each(function(t){var i=$(this),r=e[t];if(r.filterable&&r.filterToolbarFormatter){var o=r.filterToolbarFormatter(i,r);void 0!==o&&i.html(o)}else i.empty()})},t.prototype.tbody=function(){var t=this,e=this.storage,i=this.viewModel,r=document.createDocumentFragment(),o=i.data,n=e.colModels,a=e.$headTable.parent(),s=e.$gridTable.parent(),l=e.data,d=this._createShadowBody(r),h=0;n.forEach(function(t,i){t._check();var r=e.$headLabels.eq(i);t.hidden||(++h%2?r.addClass("odd"):r.addClass("even"))}),$(d).find("tr").each(function(e,i){var r=o[e];t._fillRow($(i),r,l)}),e.$gridTable.find(">tbody").remove(),a.css({"padding-right":""}),e.$gridTable.append(d),s[0].offsetWidth-s[0].clientWidth&&a.css({"padding-right":e.scrollbarWidth+"px"}),this._updateHead()},t.prototype._createShadowBody=function(t){var e=this.storage,i=this.viewModel,r=e.colModels,o=document.createElement("tbody"),n=i.data.length,a="<tr>"+Array(r.length+1).join("<td></td>")+"</tr>",s="<tbody>"+new Array(n+1).join(a)+"<tbody>";return t||(t=document.createDocumentFragment()),o.innerHTML=s,t.appendChild(o),o},t.prototype._fillRow=function(t,e,i){var r=t.find("td"),o=this.storage.colModels,n=0;t.data("Xgrid.data",e),$.each(o,function(t,i){var o,a=e[i.key],s=r.eq(t);s.attr("data-key",i.alias),i.hidden?s.remove():(n++,o=i.cellFormatter(s,a,e,o),n%2?s.addClass("odd"):s.addClass("even"),void 0!==o&&s.html(o))})},t.prototype._updateHead=function(){var t=this.storage,e=this.viewModel,i=t.colModels,r=t.$headLabels,o={};e.sortBy.forEach(function(t){o[t.by]=t.order}),i.forEach(function(t,e){var i=r.eq(e),n=o[t.alias];n?i.attr("data-sort",n):i.removeAttr("data-sort")})},t}(),S=function(){function t(t,e,i){this.options=t,this.viewModel=i,this.storage=e,this._subscribe(),this.page(),this.totalPages(),this.exec()}return t.prototype.exec=function(){this._bind()},t.prototype.page=function(){this.storage.$paginationBox.find(".Xgrid-current-page").val(this.viewModel.page)},t.prototype.totalPages=function(){this.storage.$paginationBox.find(".Xgrid-total-pages").text(this.viewModel.totalPages)},t.prototype._subscribe=function(){var t=this.viewModel;t.on("page",this.page.bind(this)),t.on("totalPages",this.totalPages.bind(this))},t.prototype._bind=function(){var t=this.storage;t.$paginationBox.on("click.xgrid",".Xgrid-first",this._handlerFirst.bind(this)),t.$paginationBox.on("click.xgrid",".Xgrid-prev",this._handlerPrev.bind(this)),t.$paginationBox.on("click.xgrid",".Xgrid-next",this._handlerNext.bind(this)),t.$paginationBox.on("click.xgrid",".Xgrid-last",this._handlerLast.bind(this)),t.$paginationBox.on("keypress.xgrid",".Xgrid-current-page",this._handlerGoTo.bind(this))},t.prototype._handlerFirst=function(t){t.preventDefault(),1!==this.viewModel.page&&(this.viewModel.newPage=1)},t.prototype._handlerLast=function(t){t.preventDefault(),this.viewModel.page!==this.viewModel.totalPages&&(this.viewModel.newPage=this.viewModel.totalPages)},t.prototype._handlerNext=function(t){t.preventDefault();var e=this.viewModel.page+1;e<=this.viewModel.totalPages&&(this.viewModel.newPage=e)},t.prototype._handlerPrev=function(t){t.preventDefault();var e=this.viewModel.page-1;e>0&&(this.viewModel.newPage=e)},t.prototype._handlerGoTo=function(t){if(13===t.which){var e=+$(t.currentTarget).val();isNaN(e)?this.viewModel.page=this.viewModel.newPage:(e<1?e=1:e>this.viewModel.totalPages&&(e=this.viewModel.totalPages),this.viewModel.newPage=e)}},t}(),P=function(){function t(t,e){this.properties={$box:e,data:[]},this.options=$.extend({beforeRequest:[],afterResponse:[],sortBy:[],paginationSelector:"",ajaxType:"POST",filterToolbarGroupOp:"AND",url:"",multiSorting:!1,filterToolbar:!1},t),this.Storage=new x({$box:e}),this._exec()}return t.prototype.setGridData=function(t){return this.Storage.data=t,this},t.prototype.refresh=function(){return this.Storage.notify("data",this.Storage),this},t.prototype.ajaxFunction=function(t,e){var i=this.options;return $.ajax({url:e,data:t,type:i.ajaxType,dataType:"json"})},t.prototype._response=function(t){var e=this.options;e.afterResponse&&h.execute(e.afterResponse,[t])},t.prototype._request=function(t){void 0===t&&(t={});var e=this.options,i=$.Deferred();return e.beforeRequest&&h.execute(e.beforeRequest,[t]),this.ajaxFunction(t,e.url).done(this._response.bind(this)).always(i.resolve),i},t.prototype._bind=function(){var t=this;this.Storage.on("colModels",function(){}),this.Storage.on("data",function(){t.Display.exec()}),this.ViewModel.on("data",function(){t.Fill.tbody(),setTimeout(function(){t.FixedHeader.resize()},1050)}),this.Storage.on("$paginationBox",function(){t.Pagination.exec()}),this.Storage.on("$headTable",function(){t.Sorting.bind()})},t.prototype._exec=function(){var t=this,e=this.options;this.ViewModel=new r,this.ProcessSettings=new d(e,this.Storage,this.ViewModel),this.BuildInfrastructure=new u(e,this.Storage,this.ViewModel),this.Sorting=new f(this.Storage,this.ViewModel,e),this.Fill=new M(this.Storage,this.ViewModel),this.FilterToolbar=new p(this.Storage,this.ViewModel,e),this.Display=new T({storage:this.Storage,viewModel:this.ViewModel,ajax:function(e){return t._request(e)},isLocal:!e.url}),this.FixedHeader=new _(this.Storage),this.Pagination=new S(e,this.Storage,this.ViewModel),this._bind(),this.Fill.thead(),$.isArray(e.data)||(e.data=[]),this.Storage.data=e.data},t}();!function(t){t.fn.Xgrid=function(){for(var e,i=[],r=0;r<arguments.length;r++)i[r]=arguments[r];var o=i[0];return this.each(function(){if(e=t(this).data("Xgrid"))if("string"==typeof o&&0!==o.indexOf("_")&&"function"===e[o]){r=i.slice(1);e[o].apply(e,r)}else e.refresh&&e.refresh.apply(e,i);else{var r="string"==typeof o?i[1]:o;t(this).data("Xgrid",new P(r,t(this)))}})}}(jQuery)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,